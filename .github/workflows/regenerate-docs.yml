# Inspired by https://github.com/peter-evans/autopep8/issues/59
name: Update Auto-Generated Docs

on:
  # Useful for testing.
  pull_request:
    # types: [opened, synchronize, reopened]
    branches: [master]
  # schedule:
  #   # At the end of every day.
  #   - cron: 0 0 * * *

jobs:
  update_auto_docs:
    # Check if the PR is not raised by this workflow and is not from a fork
    name: update_auto_docs
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Setup Linux
        if: runner.os == 'linux'
        run: |
          sudo apt-get install -y cmake libsndfile1

      - name: Install Ludwig
        run: pip install ludwig[full]

      - name: Set Ludwig version env
        run: |
          echo "ludwig_version=$(python -c "import ludwig; print('.'.join(ludwig.__version__.split('.')[:2]))")" >> $GITHUB_ENV

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Generate API Docs
        run: python code_doc_autogen.py

      # - name: Set autodocgen-patches branch name
      #   id: vars
      #   run: echo ::set-output name=branch-name::"autodocgen-patches/$GITHUB_HEAD_REF"

      - name: Get changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v34

      - name: List all changed files
        run: |
          echo "Files were changed: ${{ steps.changed-files-specific.outputs.any_changed }}"
          for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        # if: steps.changed-files.outputs.any_changed == 'true'
        with:
          commit-message: "[auto] Regenerate Ludwig API docs"
          title: "[auto] Regenerate Ludwig API docs"
          body: This is an auto-generated PR that updates Ludwig API docs.
          labels: auto
          reviewers: ludwig-maintainers
          # branch: ${{ steps.vars.outputs.branch-name }}
          branch: regenerate-docs
